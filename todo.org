# General todo

[x] Initial set up
[x] Movies route with fake data
[x] Fake Auth route
[x] Initial commit
[x] Jest
[x] commit
[x] set up test suite
[x] hook db's up
[x] push to github
[ ] Add script in package.json for path
[ ] Add the postman json to readme

[x] create models
[x] create basic endpoint
[x] draft of tests for ratings (this endpoint is NOT used)
[x] draft of tests for movies
[ ] turn off sequelize execting logging
[x] I asked a questions about release date, movies are set up releaseDate, movies/id is set up release date

[ ] close db

[x] AC 1
[x] AC 2

### Bonus
[ ] AC 3
[ ] AC 4



# Acceptance Criteria
### AC 1 list all movies
/movies?page=2
[x] it returns at most 50 movies per page
[x] it defaults to page 1 if no page query is sent
[x] it defaults to page 1 if page query is anything but a number
[x] it should include only imdbid, title, genres, release date, budget
[x] it should return budget in dollars


### AC 2 movie details
/movies/:id
[x] it should return 404 if movie is not found
[x] it should return budget in dollars
[x] it should include the correct columns
    - imdb id, title, description, release date, budget, runtime, average rating,
     genres, original language, production companies
[x] it should include the ratings


### AC 3 movies by year
/movies?page=1&year=2020&sort=ASC
[x] it should return an empty array if no movies found
[x] sort order can be descending, when the sort=DESC parameter is provided
[x] it defaults to page 1 if no page query is sent
[x] it defaults to page 1 if page query is anything but a number
[x] it Columns include: imdb id, title, genres, release date, budget
[x] it should sort by date in chronological order and descending

### AC 4 movies by genre
/movies?page=1&genre=horror
it should return an empty array when no genre are found
it defaults to page 1 if no page query is sent
it defaults to page 1 if page query is anything but a number
it should include the correct columns


